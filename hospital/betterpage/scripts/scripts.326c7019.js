"use strict";angular.module("betterpageApp",["ngMessages","ngResource"]).config(["$compileProvider","$locationProvider",function(a,b){a.debugInfoEnabled(!1),b.html5Mode({enabled:!0,requireBase:!1})}]),angular.module("betterpageApp").directive("betterpageMain",function(){return{restrict:"E",controller:["$scope","betterpageModel","betterpageServer","betterpageQuiet",function(a,b,c,d){a.model=b,a.$watchCollection("model.data",function(){a.model.generateMsg()}),a.reset=function(){a.model.resetItems(),a.form.$setUntouched(),a.form.$setPristine()},a.send=function(){var b=a.model.itemize();c.save(b,function(b){a.model.prevpage=b,a.reset()}),d.get({bp:b.bp,no:b.no.join(";"),msg:b.msg})}}]}}),angular.module("betterpageApp").directive("betterpageForm",function(){return{restrict:"E",templateUrl:"views/form.html"}}),angular.module("betterpageApp").directive("buttonPanel",["betterpageCharLimit",function(a){return{restrict:"E",templateUrl:"views/buttonpanel.html",scope:!0,link:function(b){b.showSend=function(){return b.form.$valid},b.overflow=function(){return b.model.msg.length>a}}}}]),angular.module("betterpageApp").directive("customInput",["betterpageCustomInputs","betterpageReasons",function(a,b){return{restrict:"E",scope:!0,compile:function(c,d){var e,f,g=d.reference,h=a[g];switch(c.addClass("form-group"),h.type){case"text":e=angular.element("<div>"),c.append(e),e.addClass("input-group").append(angular.element("<span>").addClass("input-group-addon").append(angular.element("<span>").addClass("glyphicon glyphicon-"+h.icon))),"respond"===g?(e.addClass("btn-group"),f='<button type="button" class="btn btn-block btn-default" ng-class="{active: model.data.reply}" ng-click="model.data.reply = !model.data.reply">Response required?</button>'):f=angular.element("<input>").prop({type:"text",placeholder:h.title}).attr(h.attr);break;case"select":e=c;var i={ptpage:"bool as label for (label,bool)",why:"reason as reason group by extra.group for (reason,extra)"};f=angular.element("<select>").attr("ng-options",i[g]+" in options"),"why"===g&&f.append('<option value="" selected>Reason for page</option>')}if(e.append(f),"within"===g&&(f.prop("type","number"),e.attr("ng-show","model.data.reply").append('<span class="input-group-addon">minutes</span>')),"respond"!==g){f.prop({id:g,required:"within"===g||"details"===g?!1:!0}).attr({name:g,"ng-model":"model.data."+g,"class":"form-control"});var j=angular.element("<ng-messages>").attr({"for":"error","ng-show":"hasError"}).append(angular.element("<ng-messages-include>").attr("src","views/errormessages.html"));return c.append(j),function(a,c,d){var e=d.reference,f=a.form[e];switch(a.title=h.title,a.error=f.$error,a.reference=e,a.$watch(function(){return f.$invalid&&f.$touched},function(b){a.hasError=b,b?d.$addClass("has-error"):d.$removeClass("has-error")}),e){case"ptpage":a.options={"Page about a patient":!0,"Page about something else":!1};break;case"why":a.options=b}}}}}}]),angular.module("betterpageApp").directive("betterpagePreview",["betterpageCharLimit",function(a){return{restrict:"E",templateUrl:"views/preview.html",scope:!0,link:function(b){b.charLimit=a}}}]),angular.module("betterpageApp").directive("betterpageOutcome",function(){return{restrict:"E",templateUrl:"views/outcome.html"}}),angular.module("betterpageApp").directive("betterpageLog",function(){return{restrict:"E",templateUrl:"views/pagelog.html",scope:{},controller:["betterpageModel","betterpageServer",function(a,b){var c=this;c.reset=function(){c.rows=[],c.hours=8,c.filterText="",c.fetched=!1,c.active=!1,c.pending=!1},c.reset(),c.refresh=function(){c.timestamp=new Date,c.requestHours=angular.copy(c.hours),c.active=!0,c.pending=!0,b.query({hours:c.hours},function(a){c.rows=a,c.pending=!1,c.fetched=!0})},c.toggle=function(){c.active=!c.active,c.active&&!c.fetched&&c.refresh()},c.copy=function(b){a.data=b,c.active=!1}}],controllerAs:"LogCtrl"}}),angular.module("betterpageApp").directive("betterpageNo",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){d.$formatters=[function(a){return a?a.join(" "):void 0}],d.$parsers.push(function(a){var b=[];return a&&angular.forEach(a.split(" "),function(a){/^[0-9]+$/.test(a)?b.push(parseInt(a,10)):a&&b.push(a)}),b}),d.$validators.allNumbers=function(a){if(!angular.isUndefined(a)){for(var b=0;b<a.length;b++)if("number"!=typeof a[b])return!1;return!0}},d.$validators.pagerNumbers=function(a){if(!angular.isUndefined(a)){for(var b=0;b<a.length;b++){var c=a[b];if("number"!=typeof c||2e4>c||c>=21e3)return!1}return!0}}}}}),angular.module("betterpageApp").directive("titleCase",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.addClass("text-capitalize"),d.$parsers.push(function(a){return a.replace(/(^([a-z]))|([ -][a-z])/g,function(a){return a.toUpperCase()})})}}}),angular.module("betterpageApp").directive("upperCase",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.addClass("text-uppercase"),d.$parsers.push(function(a){return a.toUpperCase()})}}}),angular.module("betterpageApp").directive("nhi",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){d.$validators.nhi=function(a){return d.$isEmpty(a)||/^[A-Z]{3}[0-9]{4}$/.test(a)}}}}),angular.module("betterpageApp").factory("betterpageModel",["betterpageParams","betterpageReasons",function(a,b){var c={data:{ptpage:!0},resetItems:function(){this.data=angular.extend({ptpage:this.data.ptpage,no:[],reply:!1,"private":!1},a)},generateMsg:function(){var a=this.data;a.ptpage?(this.msg=(a.phone||"")+(a.reply&&a.within?"<"+a.within+"m":"")+(a.caller?"("+a.caller+")":"")+(a.nhi?" "+a.nhi:"")+(a.patient?"("+a.patient+")":"")+(a.ward||a.bed?"["+(a.ward||"")+"-"+(a.bed||"")+"]":"")+(a.why?" "+a.why:"")+(a.details?" ("+a.details+")":""),this.bp=a.why?b[a.why].beep:1):(this.msg=a.contents||"",this.bp=1)},itemize:function(){this.generateMsg();var a={no:this.data.no,ptpage:this.data.ptpage,msg:this.msg,bp:this.bp};return this.data.ptpage?(a.phone=this.data.phone,a.caller=this.data.caller,a.reply=this.data.reply,a.within=this.data.within,a.patient=this.data.patient,a.nhi=this.data.nhi,a.ward=this.data.ward,a.bed=this.data.bed,a.why=this.data.why,a.details=this.data.details,a["private"]=!1):(a.contents=this.data.contents,a["private"]=this.data["private"]),a}};return c.resetItems(),c.generateMsg(),c}]),angular.module("betterpageApp").factory("betterpageParams",["$location",function(a){var b=a.search(),c=[];angular.isDefined(b.no)&&angular.forEach(b.no.split(";"),function(a){/^20[0-9]{3}$/.test(a)&&c.push(parseInt(a,10))}),b.no=c;var d=parseInt(b.within,10);return d?b.within=d:delete b.within,b}]),angular.module("betterpageApp").factory("betterpageServer",["$resource",function(a){return a("server.php")}]),angular.module("betterpageApp").factory("betterpageQuiet",["$resource",function(a){return a("http://10.134.0.150/cgi-bin/npcgi")}]),angular.module("betterpageApp").value("betterpageReasons",{"ADDS 3":{beep:2,group:"High ADDS - specify why"},"ADDS 4":{beep:3,group:"High ADDS - specify why"},"ADDS 5+":{beep:4,group:"High ADDS - specify why"},Pain:{beep:2,group:"Concern"},"Short of breath":{beep:3,group:"Concern"},Nausea:{beep:2,group:"Concern"},"Urinary retention":{beep:2,group:"Concern"},Wound:{beep:2,group:"Concern"},"Clarify plan":{beep:1,group:"Concern"},Fluids:{beep:1,group:"Medication"},"Sleeping pill":{beep:1,group:"Medication"},Laxatives:{beep:1,group:"Medication"},"Regular Meds":{beep:1,group:"Medication"},"IV line/bloods":{beep:1,group:"Task"},"Review result":{beep:1,group:"Task"},Admit:{beep:1,group:"Task"},Discharge:{beep:1,group:"Task"},Rechart:{beep:1,group:"Task"},Consent:{beep:1,group:"Task"},Inform:{beep:1,group:"Other - specify below"},"Call urgently!":{beep:4,group:"Other - specify below"},"Review urgently!":{beep:4,group:"Other - specify below"},Custom:{beep:1,group:"Other - specify below"}}),angular.module("betterpageApp").value("betterpageCharLimit",128),angular.module("betterpageApp").value("betterpageCustomInputs",{no:{type:"text",title:"Pager",icon:"phone",attr:{"betterpage-no":""}},caller:{type:"text",title:"Name",icon:"user",attr:{"title-case":"","ng-minlength":2}},phone:{type:"text",title:"Phone",icon:"phone-alt",attr:{"ng-pattern":/^[0-9]+$/}},within:{type:"text",title:"within",icon:"time",attr:{"ng-required":"model.data.reply","ng-pattern":/^[0-9]+$/,min:1,max:30}},patient:{type:"text",title:"Name",icon:"user",attr:{"title-case":"","ng-minlength":2}},nhi:{type:"text",title:"NHI",icon:"tag",attr:{"upper-case":"",nhi:""}},ward:{type:"text",title:"Ward",icon:"home",attr:{"upper-case":"","ng-maxlength":3}},bed:{type:"text",title:"Bed",icon:"bed",attr:{"upper-case":"","ng-maxlength":3}},details:{type:"text",title:"Specify (optional)",icon:"comment",attr:{}},contents:{type:"text",title:"Message",icon:"comment",attr:{}},respond:{type:"text",icon:"earphone"},ptpage:{type:"select"},why:{type:"select"}}),angular.module("betterpageApp").run(["$templateCache",function(a){a.put("views/buttonpanel.html",'<div class="col-sm-4"> <button type="button" class="btn btn-primary btn-block" ng-if="showSend()" ng-disabled="overflow()" ng-click="send()"> <span ng-bind="overflow() ? \'Too long!\' : \'Send\'"></span> <span ng-show="canSend" class="glyphicon glyphicon-send"></span> </button> </div> <div class="col-sm-4"> <div class="checkbox" ng-hide="model.data.ptpage"> <label> <input type="checkbox" ng-model="model.data.private">Do not log this page</label> </div> </div> <div class="col-sm-4"> <button type="button" class="btn btn-default btn-block" ng-click="reset()"> Reset <span class="glyphicon glyphicon-refresh"></span> </button> </div>'),a.put("views/errormessages.html",'<div ng-if="reference===\'within\'"> <ng-message class="help-block" when="number,pattern">This field must contain only digits</ng-message> <ng-message class="help-block" when="required">This field is required</ng-message> </div> <ng-message ng-if="reference===\'why\'" class="help-block" when="required"><em>Reason for page</em> is required</ng-message> <ng-message class="help-block" when="required"><em ng-bind="title"></em> is required</ng-message> <ng-message class="help-block" when="allNumbers"><em>Pager numbers</em> must be integers separated by spaces</ng-message> <ng-message class="help-block" when="pagerNumbers"><em>Pager numbers</em> must be 20 followed by 3 digits</ng-message> <ng-message class="help-block" when="minlength"><em>Name</em> must be at least 2 characters long</ng-message> <ng-message class="help-block" when="max"><em>Response time</em> must be 30 minutes or less</ng-message> <ng-message class="help-block" when="min"><em>Response time</em> must be greater than 0</ng-message> <ng-message class="help-block" when="nhi"><em>NHI</em> must be valid</ng-message> <ng-message class="help-block" when="maxlength"><em ng-bind="title"></em> must be 1 to 3 characters long</ng-message> <ng-message class="help-block" when="pattern"><em ng-bind="title"></em> must contain only digits</ng-message>'),a.put("views/form.html",'<fieldset> <legend>To</legend> <div class="row"> <custom-input reference="no" class="col-sm-6"></custom-input> <custom-input reference="ptpage" class="col-sm-6"></custom-input> </div> </fieldset> <div ng-if="model.data.ptpage"> <fieldset> <legend>From</legend> <div class="row"> <custom-input reference="caller" class="col-sm-6"></custom-input> <custom-input reference="phone" class="col-sm-6"></custom-input> </div> <div class="row"> <custom-input reference="respond" class="col-sm-6"></custom-input> <custom-input reference="within" class="col-sm-6"></custom-input> </div> </fieldset> <fieldset> <legend>Patient</legend> <div class="row"> <custom-input reference="patient" class="col-sm-6"></custom-input> <custom-input reference="nhi" class="col-sm-6"></custom-input> </div> <div class="row"> <custom-input reference="ward" class="col-sm-6"></custom-input> <custom-input reference="bed" class="col-sm-6"></custom-input> </div> </fieldset> <fieldset> <legend>Details</legend> <div class="row"> <custom-input reference="why" class="col-sm-6"></custom-input> <custom-input reference="details" class="col-sm-6"></custom-input> </div> </fieldset> </div> <div ng-if="!model.data.ptpage"> <fieldset> <legend>Contents</legend> <custom-input reference="contents"></custom-input> </fieldset> </div> <button-panel class="row form-group"></button-panel>'),a.put("views/outcome.html","<h4>Last message</h4> <dl> <dt>{{model.prevpage.no.length || 'No'}} recipient{{model.prevpage.no.length !== 1 ? 's' : ''}}</dt> <dd ng-repeat=\"number in model.prevpage.no track by $index\" ng-bind=\"number\"></dd> <dt>Message</dt> <dd><samp ng-bind=\"model.prevpage.msg\"></samp></dd> <dt>Beep code</dt> <dd ng-bind=\"model.prevpage.bp\"></dd> <dt>Logged</dt> <dd ng-bind=\"model.prevpage.private ? '&#x2717;' : '&#x2713;'\"></dd> </dl>"),a.put("views/pagelog.html",'<h4>Log</h4> <p class="form-inline"> <label for="hours">Messages from last</label> <input id="hours" class="form-control" type="number" ng-model="LogCtrl.hours" min="1" max="72" ng-pattern="/^[0-9]+$/"> <label for="hours">hours</label> <button class="btn btn-default" ng-click="LogCtrl.toggle()" ng-bind="LogCtrl.active ? \'Hide\' : \'Show\'" ng-disabled="!LogCtrl.fetched && !LogCtrl.hours"></button> <span ng-show="LogCtrl.fetched"><label for="refresh">retrieved at {{LogCtrl.timestamp | date : \'dd/MM/yy HH:mm:ss\'}}</label> <button class="btn btn-default" id="refresh" ng-disabled="!LogCtrl.hours" ng-click="LogCtrl.refresh()">Refresh</button></span> <span ng-show="LogCtrl.active && LogCtrl.pending">Updating...</span> </p> <div ng-show="LogCtrl.active && LogCtrl.fetched"> <p ng-show="LogCtrl.rows.length" class="form-inline"> <label for="filter">Filter by</label> <input id="filter" class="form-control" type="search" ng-model="LogCtrl.filterText"> </p> <p ng-hide="LogCtrl.rows.length">No messages logged in last {{LogCtrl.requestHours}} hours</p> <p ng-show="LogCtrl.rows.length && !filtered.length">No messages match the filter</p> <div class="table-responsive"> <table class="table table-condensed table-hover table-bordered table-striped" ng-show="filtered.length"> <thead> <tr><th>Timestamp</th><th>To</th><th>Caller</th><th>Phone</th><th>Within (mins)</th><th>Patient</th><th>NHI</th><th>Ward</th><th>Bed</th><th>Why</th><th>Details</th><th></th></tr> </thead> <tbody> <tr ng-repeat="page in LogCtrl.rows | filter:LogCtrl.filterText as filtered track by $index"> <td ng-bind="page.ts * 1000 | date : \'dd/MM/yy HH:mm:ss\'"></td> <td ng-bind="page.data.no[0]"></td> <td ng-if="!page.data.ptpage" ng-bind="page.data.contents" colspan="9"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.caller"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.phone"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.within"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.patient"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.nhi"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.ward"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.bed"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.why"></td> <td ng-if="page.data.ptpage" ng-bind="page.data.details"></td> <td><button class="btn btn-default btn-xs btn-block" ng-click="LogCtrl.copy(page.data)">Copy</button></td> </tr> </tbody> </table> </div> </div>'),a.put("views/preview.html",'<h4>Preview</h4> <dl> <dt>{{model.data.no.length || \'No\'}} recipient{{model.data.no.length !== 1 ? \'s\' : \'\'}}</dt> <dd ng-repeat="number in model.data.no track by $index" ng-bind="number"></dd> <dt>Message</dt> <dd><samp ng-bind="model.msg"></samp></dd> <dt>Beep code</dt> <dd ng-bind="model.bp"></dd> <dt>Characters</dt> <dd ng-bind="model.msg.length + \'/\' + charLimit"></dd> </dl>')}]);